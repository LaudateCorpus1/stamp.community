- header ||= nil; choose_me ||= nil
- skip_card ||= nil; show_stamp ||= nil
- operating_system ||= nil

- if skip_card
  = form_for [@votable, Vote.new], url: stamp_votes_path(@votable.id), html: { id: 'new_downvote' } do |f|
    = f.hidden_field :accept, value: false
    %button.ui.purple.basic.big.button
      Discard Me
- else
  %div.ui.segment{style: 'padding: 3rem 0 3rem 0;'}
    - if header
      %h2{style: 'top: 0.4rem; position: absolute;'}
        %i.spotify.icon
        = link_to stamp.app.name, app_path(stamp.app)
        %i.purple.external.small.icon
    %table.ui.celled.table{style: 'margin: 1px 0 !important;'}
      %tbody
        %tbody
          %tr
            %td{ class: ('selected' if stamp.internet) }
              Internet
              %i.info.circle.icon.small.link{ data: { content: 'Allow connections to the Internet.', variation: 'mini' } }
            %td{ class: ('selected' if stamp.lan) }
              LAN
              %i.info.circle.icon.small.link{ data: { content: 'Allow connections to the local area network.', variation: 'mini' } }
            %td{ class: ('selected' if stamp.localhost) }
              Localhost
              %i.info.circle.icon.small.link{ data: { content: 'Allow connections to the local host.', variation: 'mini' } }
          %tr
            %td{ class: ('selected' if stamp.prompt) }
              Prompt
              %i.info.circle.icon.small.link{ data: { content: 'Prompt for decisions on new connections.', variation: 'mini' } }
            %td{ class: ('selected' if stamp.blacklist) }
              Blacklist
              %i.info.circle.icon.small.link{ data: { content: 'Allow all connections except those explicitly denied.', variation: 'mini' } }
            %td{ class: ('selected' if stamp.whitelist) }
              Whitelist
              %i.info.circle.icon.small.link{ data: { content: 'Block all connections except those explicitly allowed.', variation: 'mini' } }
          %tr
            %td{ class: ('selected' if stamp.p2p) }
              P2P
              %i.info.circle.icon.small.link{ data: { content: 'Allow program to directly communicate with peers (ie. anyone), without resolving DNS first.', variation: 'mini' } }
            %td{ class: ('selected' if stamp.server) }
              Server
              %i.info.circle.icon.small.link{ data: { content: 'Allow program to accept incoming connections and act as a server for other devices.', variation: 'mini' } }
            %td{style: 'background-color: lightgray;'}
        - if choose_me
          %div.ui.bottom.left.attached.label{style: 'padding: 4px;'}
            = form_for [@votable, Vote.new], url: stamp_votes_path(@votable.id), html: { id: 'new_upvote' } do |f|
              = f.hidden_field :accept, value: true
              %button.ui.purple.basic.big.button{style: 'margin: 0;'}
                Choose Me
        %div{class: %w[ui large top right attached label].push(class_for(stamp.state))}
          = stamp.state.titleize
        - if show_stamp
          %div.ui.bottom.left.attached.label{style: 'padding: 4px;'}
            = link_to flag_stamp_path(stamp), class: 'ui basic purple button', style: 'margin: 0;' do
              Show Stamp
        - elsif stamp.state == "accepted"
          %div.ui.bottom.left.attached.label{style: 'padding: 4px;'}
            = link_to new_flag_stamp_path(app_id: stamp.app.id), class: 'ui basic purple button', style: 'margin: 0;' do
              Battle Me
        - if operating_system
          %div.ui.bottom.right.attached.label{style: 'padding: 5px;'}
            = render 'apps/partials/icons', app: @stamp.app


:javascript
  $('.info.circle.icon.link')
  .popup({
    position: 'right center'
  });
